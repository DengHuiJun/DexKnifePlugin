apply plugin: 'com.android.application'
if (hasDexKnifePlugin()) {
    apply plugin: 'com.ceabie.dexknife'
}

android {
    buildToolsVersion '25.0.2'

    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VER)
    buildToolsVersion project.BUILD_TOOLS_VER
    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK_VER)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    productFlavors {
//        flavor1 {
//            versionCode 20
//        }
//
//        flavor2 {
//            minSdkVersion 14
//            multiDexEnabled false
//        }
//    }
    packagingOptions {
        exclude ".readme"
    }
    lintOptions {
        abortOnError false
    }

    buildToolsVersion '26.0.2'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    compile "io.reactivex:rxjava:${RX_JAVA}"
    compile "io.reactivex:rxandroid:${RX_ANDROID}"
    //    compile 'com.google.dagger:dagger:2.0'
    //    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'com.android.support:multidex:1.0.2'
    compile project(':lib1')
}

static boolean hasDexKnifePlugin() {
    try {
        Class.forName("com.ceabie.dexknife.DexKnifePlugin")
        return true
    } catch (Exception e) {
    }

    return false
}